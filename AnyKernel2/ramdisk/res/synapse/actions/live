readlines() {
  awk -v startl=${2:-1} -v nlines=${1:-10} ' NR - (startl-1) > nlines { exit( 0 ); } NR >= startl '
}

freq() {
  echo "$((`cat /sys/devices/system/cpu/cpu$1/cpufreq/$2_cur_freq` / 1000)) MHz";
}

volt() {
  echo "$((`cat /sys/kernel/debug/voltage/vdd_$1/curr_vp_volt` / 1000)) mV";
}

case $1 in
  cpufreq)
    if [ -e /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq ]; then
      CPUFREQONE=$(freq 0 scaling);
    else
      CPUFREQONE=Offline;
    fi

    if [ -e /sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq ]; then
      CPUFREQTWO=$(freq 1 scaling);
    else
      CPUFREQTWO=Offline;
    fi

    VOLT=$(volt mpu);

    echo "Core 1: $CPUFREQONE     $VOLT@nCore 2: $CPUFREQTWO          -          $dummy";
  ;;

  temp)
    CPU="$(awk -v cpu=`cat /sys/devices/platform/omap/omap_temp_sensor.0/temperature` 'BEGIN { print cpu / 1000 }')°C";
    BATTERY="$((`cat /sys/devices/platform/omap/omap_i2c.4/i2c-4/4-0036/power_supply/battery/temp` / 10))°C";

    echo "CPU: $CPU       Battery: $BATTERY";
  ;;

  gpu-iva)
    GPUFREQ=$(freq 0 gpu);
    CVOLT=$(volt core);
    IVAFREQ=$(freq 0 iva);
    IVOLT=$(volt iva);

    echo "GPU: $GPUFREQ      $CVOLT@nIVA: $IVAFREQ        $IVOLT ";
  ;;

  entropy)
    echo "`cat /proc/sys/kernel/random/entropy_avail`";
  ;;

  meminfo)
    echo "`cat /proc/meminfo | readlines r $2 $3 | awk 1 ORS='@n'`";
  ;;

  vmstats)
    echo "`cat /proc/vmstat | readlines r $2 $3 | awk 1 ORS='@n'`";
  ;;

  bootloader)
    lockstate=`dd ibs=1 count=1 skip=124 obs=1 if=/dev/block/platform/omap/omap_hsmmc.0/by-name/param 2> /dev/null | od -h | head -n 1 | cut -c 11-`;
    if [ $lockstate == "01" ]; then
      echo "Locked";
    elif [ $lockstate == "00" ]; then
      echo "Unlocked";
    else
      echo "Unknown";
    fi;
  ;;

  uptime)
    UPTIME=`uptime`;
    echo "${UPTIME//, /@n}";
  ;;
esac;

