readlines() {
  awk -v startl=${2:-1} -v nlines=${1:-10} ' NR - (startl-1) > nlines { exit( 0 ); } NR >= startl '
}

 case $1 in
  cpufreq)
    if [ -e /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq ]; then
      CPUFREQONE="$((`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq` / 1000)) MHz";
    else
      CPUFREQONE=Offline;
    fi

    if [ -e /sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq ]; then
      CPUFREQTWO="$((`cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq` / 1000)) MHz";
    else
      CPUFREQTWO=Offline;
    fi

    echo "Core 1: $CPUFREQONE@nCore 2: $CPUFREQTWO";
  ;;

  temp)
    CPU="$(awk -v cpu=`cat /sys/devices/platform/omap/omap_temp_sensor.0/temperature` 'BEGIN { print cpu / 1000 }')°C";
    BATTERY="$((`cat /sys/devices/platform/omap/omap_i2c.4/i2c-4/4-0036/power_supply/battery/temp` / 10))°C";

    echo "CPU: $CPU       Battery: $BATTERY";
  ;;

  gpufreq)
    if [ -f /sys/devices/system/cpu/cpu0/cpufreq/gpu_cur_freq ]; then
      GPUFREQ="$((`cat /sys/devices/system/cpu/cpu0/cpufreq/gpu_cur_freq` / 1000)) MHz";
    else
      GPU=`cat /sys/devices/system/cpu/cpu0/cpufreq/gpu_clock`;
      GPUFREQ="${GPU//hz/Hz}";
    fi;
    echo "$GPUFREQ";
  ;;

  entropy)
    echo "`cat /proc/sys/kernel/random/entropy_avail`";
  ;;

  meminfo)
    echo "`cat /proc/meminfo | readlines $1 $2 | awk 1 ORS='@n'`";
  ;;

  vmstats)
    echo "`cat /proc/vmstat | readlines $1 $2 | awk 1 ORS='@n'`";
  ;;
esac;

